name: ü§ñ‚è© Synchronize dev
description: 'Attempts to Fast Forward the develop branch with the main branch, or create a PR to develop upon failing.'
inputs:
  MAIN:
    description: 'Main branch name'
    required: false 
    default: 'main'
  DEVELOP:
    description: 'Develop branch name'
    required: false 
    default: 'develop'
  BOT_NAME:
    description: 'Name of the bot'
    required: true
    default: 'ü§ñ knerd-bot'
  BOT_EMAIL:
    description: 'Email of the bot'
    required: true
    default: 'contact@midnightnerd.com'
  TOKEN:
    description: 'GitHub token'
    required: true
  VERSION:
    description: 'Symantic version of main branch'
    required: false 
runs:
  using: 'composite'
  steps:
    - name: üèó Checkout master
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 
    - name: üîñ Get Version 
      run: |
        VERSION=${{ inputs.VERSION }}
        if [ -z "$VERSION" ]; then
          VERSION=$(node -p "require('./package.json').version")
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
      shell: bash
    - name: ‚è© Fast Forward develop
      run: |
        create_pr() {
          RESPONSE=$(curl -s \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ inputs.TOKEN }}" \
            -d "{ \"title\": \"$1\", \"head\": \"$2\", \"base\": \"$3\" }" \
            "https://api.github.com/repos/${{ github.repository }}/pulls")

          echo "Response: $RESPONSE"  # Print the entire response

          echo $RESPONSE | jq -r ".html_url"
        }

        BRANCH="merge/v${{ env.VERSION }}"
        
        git config --global user.email "${{ inputs.BOT_EMAIL }}" 
        git config --global user.name "${{ inputs.BOT_NAME }}"
        git fetch --all
        git checkout origin/${{ inputs.DEVELOP }}
        git switch -c ${{ inputs.DEVELOP }}
        if git merge origin/${{ inputs.MAIN }} --ff-only;  then
          echo "Fast-forward merge successful"
          git push origin ${{ inputs.DEVELOP }}
        else
          echo "Fast-forward merge failed, creating a new branch and PR for manual review"
          git checkout ${{ inputs.MAIN }} 
          git checkout -b "${BRANCH}"
          git push -u origin "${BRANCH}"
          PR_URL=$(create_pr "üîñ ${BRANCH} to ${{ inputs.DEVELOP }} ü§ñ‚è©" "${BRANCH}" ${{ inputs.DEVELOP }})
          echo "Created PR: ${PR_URL}"
        fi
      shell: bash
    - name: üåê Get commit URL
      run: |
        commit_url=https://github.com/${{ github.repository }}/commit/${{ github.event.after }}
        echo "Commit URL: ${commit_url}"
      shell: bash
